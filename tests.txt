## Authentication
=================

X-API-KEY: your-key-here
X-API-KEY-TYPE: SERVER / BROWSER / SENSOR

## Query Parameters
===================
** GET /Things(id)?$expand=locations
{
    “@iot.selfLink”: “http://example.org/OGCSensorThings/v1.0/Things(27815)”,
    “Datastreams@iot.navigationLink”: “../Things(27815)/Datastreams”,
    “@iot.id”: 27815,
    “Locations”: [
    {
        “@iot.selfLink”: “http://example.org/OGCSensorThings/v1.0/Locations(27817)”,
        “@iot.id”: 27817,
        “encodingType”: “application/vnd.geo+json”,
        “description”: “my backyard”,
        “location”: {
            “coordinates”: [ -117.123, 54.123 ],
            “type”: “Point”
        }
    }],
    “description”: “camping lantern”,
    “properties”: {
        “property2”: “it glows in the dark”,
        “property1”: “it’s waterproof”,
        “property3”: “it repels insects”
    },
    “HistoricalLocations@iot.navigationLink”: “../Things(27815)/HistoricalLocations”
}

** GET /Things(id)?$select=properties
{
    “properties”: {
        “property2”: “it glows in the dark”,
        “property1”: “it’s waterproof”,
        “property3”: “it repels insects”
    }
}

** GET /v1.0/Locations?$expand=Things&$filter=st_within(location,geography 'POLYGON ((-117.0236 49.1592, -117.3311 52.1932, -110.0802 52.1663, -110.0361 49.0297, -117.0236 49.1592))')
{
    “@iot.selfLink”: “http://example.org/OGCSensorThings/v1.0/Locations(27837)”,
    “@iot.id”: 27837,
    “encodingType”: “application/vnd.geo+json”,
    “Things@iot.navigationLink”: “../Locations(27837)/Things”,
    “description”: “my backyard”,
    “location”: {
        “coordinates”: [ -117.123, 54.123 ],
        “type”: “Point”
    },
    “HistoricalLocations@iot.navigationLink”: “../Locations(27837)/HistoricalLocations”
}

** GET /HistoricalLocations(id)?$select=time
{
    “time”: “2015-09-22T19:24:38.063Z”
}

** GET /v1.0/Datastreams(id)?$select=description,unitofmeasurement
{
    “unitOfMeasurement”: {
        “symbol”: “kOhm”,
        “name”: “kilo ohm”,
        “definition”: “”
    },
    “description”: “NO2 Levels”
}

** GET /Sensors(id)?$select=metadata
{
    “metadata”: “2011-11-18 23:58:00-06,AK_ASOS”
}

## Basic Querying

** GET /v1.0/Datastreams(id)/Observations
{
    “count”: 60,
    “value”: [
    {
        “result”: “18.00”,
        “resultTime”: null,
        “@iot.selfLink”: “http://example.org/OGCSensorThings/v1.0/Observations(4738185)”,
        “@iot.id”: 4738185,
        “phenomenonTime”: “2015-08-26T23:55:00.000Z”,
        “FeatureOfInterest@iot.navigationLink”: “../Observations(4738185)/FeatureOfInterest”,
        “Datastream@iot.navigationLink”: “../Observations(4738185)/Datastream”
    },{
        “result”: “17.00”,
        “resultTime”: null,
        “@iot.selfLink”: “http://example.org/OGCSensorThings/v1.0/Observations(4738181)”,
        “@iot.id”: 4738181,
        “phenomenonTime”: “2015-08-26T22:55:00.000Z”,
        “FeatureOfInterest@iot.navigationLink”: “../Observations(4738181)/FeatureOfInterest”,
        “Datastream@iot.navigationLink”: “../Observations(4738181)/Datastream”
    },
    ……….]
}

## Errors
400	Bad Request – Something in your request is not correct. It could be the content of the JSON or it could be the server endpoint is not expecting this content.
401	Unauthorized – Bad API key
404	Not Found – The resource you are looking for does not exist on the system.
405	Method not allowed – You requested a method that has not been implemented on the server.
406	Not Acceptable – You requested a format that isn’t JSON.
409	Conflict – A resource constraint has been violated.
410	Gone – The resource requested has been removed.
429	Too Many Requests – Too much load right now. Try again later.
500	Internal Server Error – We had a problem with our server. Try again later.
503	Service Unavailable – We’re temporarially offline for maintanance. Please try again later.
